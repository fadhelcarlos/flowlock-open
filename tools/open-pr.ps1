param(
  [Parameter(Mandatory=$true)][string]$Name,      # e.g. m1-cli-templates
  [Parameter(Mandatory=$true)][string]$Title,     # e.g. "M1: CLI templates"
  [string]$BodyFile = "",                         # path to a .md body
  [string]$Patch = ""                             # path to a .patch or a directory of patches
)

$ErrorActionPreference = "Stop"

# Ensure we're on main & up to date
git fetch origin
git checkout main
git pull --rebase origin main

$branch = "flowlock/$Name"
git checkout -b $branch

# Apply patch if provided
if ($Patch -ne "") {
  if (Test-Path $Patch -PathType Leaf) {
    git apply --3way $Patch
  } elseif (Test-Path $Patch -PathType Container) {
    Get-ChildItem $Patch -Filter *.patch | ForEach-Object {
      git apply --3way $_.FullName
    }
  } else {
    Write-Error "Patch not found: $Patch"
  }
}

# Let you stage changes (if patch already applied, this grabs them)
git add -A
if (-not (git diff --cached --quiet)) {
  git commit -m $Title
}

git push -u origin $branch

# Compose PR body
$body = ""
if ($BodyFile -ne "" -and (Test-Path $BodyFile)) {
  $body = Get-Content $BodyFile -Raw
} else {
  $body = @"
Automated PR for **$Name**.

- Branch: $branch
- Generated by tools/open-pr.ps1

"@
}

# Create PR
gh pr create --title $Title --body $body --head $branch --base main
Write-Host "PR opened for $branch"
