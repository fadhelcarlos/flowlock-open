name: FlowLock UX Audit
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - run: pnpm install

      - name: Run FlowLock audit
        run: pnpm -w uxcg audit

      # ⬇️ New: post GREEN/RED status to your Cloud ingest
      - name: Post audit status to FlowLock Cloud
        if: always() # send even on failure
        shell: bash
        env:
          FLOWLOCK_CLOUD_URL: ${{ secrets.FLOWLOCK_CLOUD_URL }}
          FLOWLOCK_TOKEN: ${{ secrets.FLOWLOCK_TOKEN }}
          FLOWLOCK_PROJECT_ID: flowlock-open-ci
        run: |
          node - <<'NODE'
          const fs = require('fs');

          const base = (process.env.FLOWLOCK_CLOUD_URL || 'http://localhost:8787').replace(/\/$/,'');
          const url = base + '/ingest';
          const project = process.env.FLOWLOCK_PROJECT_ID || 'flowlock-open-ci';
          const token = process.env.FLOWLOCK_TOKEN || '';
          const p = 'artifacts/results.junit.xml';

          if (!fs.existsSync(p)) { console.log('no junit'); process.exit(0); }

          const xml = fs.readFileSync(p,'utf8');
          // minimal parse: pull attributes from first <testsuite ...>
          const m = xml.match(/<testsuite\b[^>]*>/i);
          let tests=0, failures=0, errors=0, skipped=0;
          if (m) {
            const tag = m[0];
            const get = (name) => ((tag.match(new RegExp(name + '="([^"]*)"', 'i'))||[])[1]) || '0';
            tests = +get('tests'); failures = +get('failures'); errors = +get('errors'); skipped = +get('skipped');
          }
          const payload = { project, kind:'junit', payload:{ stats:{ tests, failures, errors, skipped }, artifacts:['er.svg','flow.svg','screens.csv','results.junit.xml'] } };

          (async () => {
            const res = await fetch(url, {
              method: 'POST',
              headers: {
                'content-type': 'application/json',
                ...(token ? { 'authorization': 'Bearer ' + token } : {})
              },
              body: JSON.stringify(payload)
            });
            console.log('POST', url, res.status);
          })().catch(e => { console.error('send failed:', e.message); process.exitCode = 0; });
          NODE

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flowlock-artifacts
          path: |
            artifacts/er.svg
            artifacts/flow.svg
            artifacts/screens.csv
            artifacts/results.junit.xml
